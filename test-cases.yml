---
- summary: |
    Проверка возможности аутентификации на сайте с помощью GitHub, используя имя зарегистрированного пользователя и пароль
  requirement: |
    Пользователь должен иметь возможность пройти аутентификацию на сайте с помощью GitHub, используя имя пользователя и пароль
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    открыта форма аутентификации «Sign In»
  test-data: |
    Тестовые данные
    Имя пользователя = Natalia786
    Пароль = zrjsh963!cv
  steps:
    - В форме авторизации нажимаем кнопку «Sign in with Github»
    - Вводим имя пользователя в окно «Username or email address»
    - Вводим пароль в окно «Password»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка возможности аутентификации на сайте с помощью GitHub, используя почту зарегистрированного пользователя и пароль
  requirement: |
    Пользователь должен иметь возможность пройти аутентификацию на сайте с помощью GitHub, используя почту зарегистрированного пользователя и пароль
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    открыта форма аутентификации «Sign In»
  test-data: |
    Тестовые данные
    Почта пользователя = NAta-786_@yandex.ru
    Пароль = zrjsh963!cv
  steps:
    - В форме авторизации нажимаем кнопку «Sign in with Github»
    - Вводим почту пользователя в окно «Username or email address»
    - Вводим пароль в окно «Password»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка возможности аутентификации на сайте используя почту зарегистрированного пользователя и пароль
  requirement: |
    Пользователь должен иметь возможность пройти аутентификацию на сайте используя почту зарегистрированного пользователя и пароль
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    открыта форма аутентификации «Sign In»
  test-data: |
    Тестовые данные
    Почта пользователя = NAta-786_@yandex.ru
    Пароль = 956yuD23!
  steps:
    - Вводим почту пользователя в окно «Email»
    - Вводим пароль в окно «Password»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка отсутствия возможности аутентификации на сайте используя почту не зарегистрированного пользователя и пароль
  requirement: |
    Не зарегистрированный пользователь не должен иметь возможность пройти аутентификацию на сайте используя почту и пароль
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    открыта форма аутентификации «Sign In»
  test-data: |
    Тестовые данные
    Почта пользователя = Skylera@yandex.ru
    Пароль = 69!mM654123
  steps:
    - Вводим почту пользователя в окно «Email»
    - Вводим пароль в окно «Password»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Не зарегистрированный пользователь не может пройти аутентификацию на сайте используя почту и пароль, сайт выдает сообщение, что пользователь с данной почто не найден «EMAIL_NOT_FOUND»

- summary: |
    Проверка отсутствия возможности аутентификации на сайте используя почту зарегистрированного пользователя без пароля
  requirement: |
    Пользователь не должен иметь возможность пройти аутентификацию на сайте используя почту зарегистрированного пользователя при незаполненном пароле
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    открыта форма аутентификации «Sign In»
  test-data: |
    Тестовые данные
    Почта пользователя = NAta-786_@yandex.ru
    Пароль = 
  steps:
    - Вводим почту пользователя в окно «Email»
    - Вводим пароль в окно «Password»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Сайт выдает сообщение  о необходимости введения пароля«Password required», редирект не происходит

- summary: |
    Проверка наличия защиты формы аутентификации с использованием почты зарегистрированного пользователя и пароля от ввода невалидных данных в окно «Email» 
  requirement: |
    Сайт должен выводить сообщение о валидных данных, которые могут быть введены в окно «Email» формы аутентификации с использованием почты зарегистрированного пользователя и пароля
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    открыта форма аутентификации «Sign In»
  test-data: |
    Тестовые данные
    Почта пользователя = NAta-786_@yandex.r
    Пароль = 956yuD23!
  steps:
    - Вводим почту пользователя в окно «Email»
    - Вводим пароль в окно «Password»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Сайт выводить сообщение о валидных данных, которые должны быть введены в окно «Email» формы аутентификации с использованием почты зарегистрированного пользователя и пароля. Отправление данных на сервер не происходит

- summary: |
    Проверка возможности аутентификации на сайте используя функцию восстановления пароля
  requirement: |
    Пользователь должен иметь возможность пройти аутентификацию на сайте используя функцию восстановления пароля
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    открыта форма аутентификации «Sign In»
  test-data: |
    Тестовые данные
    Почта пользователя = NAta-786_@yandex.ru
  steps:
    - Нажимаем на кнопку «Forgot your password?»
    - Вводим почту пользователя в окно «Email»
    - Нажимаем кнопку «Submit»
    - Нажимаем кнопку «Sign in»
    - Вводим данные пользователя (почту и обновленный пароль)
  expected-result: |
    Пользователь должен попасть на главную страницу после обновления пароля

- summary: |
    Проверка возможности регистрации на сайте нового пользователя
  requirement: |
    Пользователь должен иметь возможность регистрации на сайте используя почту и пароль
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign up»
    открыта форма регистрации «Sign Up»
  test-data: |
    Тестовые данные
    Ник = NataliaBB
    Почта пользователя = NAtascha-BB_@yandex.ru
    Пароль = HZn68H!45
  steps:
    - Вводим ник пользователя в окно «Nickname»
    - Вводим почту пользователя в окно «Email»
    - Вводим пароль в окно «Password»
    - Повторяем ввод пароля в окно «Password Confirmation»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка наличия защиты формы регистрации от ввода невалидных данных в окно «Nickname»
  requirement: |
    Сайт должен выводить сообщение о валидных данных, которые могут быть введены в окно «Nickname» формы регистрации
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign up»
    открыта форма регистрации «Sign Up»
  test-data: |
    Тестовые данные
    Ник = ??????
    Почта пользователя = NAtascha-BB_@yandex.ru
    Пароль = HZn68H!45
  steps:
    - Вводим ник пользователя в окно «Nickname»
    - Вводим почту пользователя в окно «Email»
    - Вводим пароль в окно «Password»
    - Повторяем ввод пароля в окно «Password Confirmation»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Сайт выводить сообщение о валидных данных, которые должны быть введены в окно «Nickname» формы регистрации. Отправление данных на сервер не происходит

- summary: |
    Проверка наличия защиты формы регистрации от ввода невалидных данных в окно «Email»
  requirement: |
    Сайт должен выводить сообщение о валидных данных, которые могут быть введены в окно «Email» формы регистрации
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign up»
    открыта форма регистрации «Sign Up»
  test-data: |
    Тестовые данные
    Ник = NataliaBB
    Почта пользователя = NAtascha-BB_@yandex
    Пароль = HZn68H!45
  steps:
    - Вводим ник пользователя в окно «Nickname»
    - Вводим почту пользователя в окно «Email»
    - Вводим пароль в окно «Password»
    - Повторяем ввод пароля в окно «Password Confirmation»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Сайт выводить сообщение о валидных данных, которые должны быть введены в окно «Email» формы регистрации. Отправление данных на сервер не происходит

- summary: |
    Проверка наличия защиты формы регистрации от ввода невалидных данных в окно «Password»
  requirement: |
    Сайт должен выводить сообщение о валидных данных, которые могут быть введены в окно «Password» формы регистрации
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign up»
    открыта форма регистрации «Sign Up»
  test-data: |
    Тестовые данные
    Ник = NataliaBB
    Почта пользователя = NAtascha-BB_@yandex
    Пароль = HZn68H45
  steps:
    - Вводим ник пользователя в окно «Nickname»
    - Вводим почту пользователя в окно «Email»
    - Вводим пароль в окно «Password»
    - Повторяем ввод пароля в окно «Password Confirmation»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Сайт выводить сообщение о валидных данных, которые должны быть введены в окно «Password» формы регистрации. Отправление данных на сервер не происходит

- summary: |
    Проверка наличия защиты формы регистрации от ввода невалидных данных в окно «Password Confirmation»
  requirement: |
    Сайт должен выводить сообщение о валидных данных, которые должны быть введены в окно «Password Confirmation» формы регистрации
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign up»
    открыта форма регистрации «Sign Up»
  test-data: |
    Тестовые данные
    Ник = NataliaBB
    Почта пользователя = NAtascha-BB_@yandex
    Пароль = HZn68H!45
    Пароль для повторного ввода = HZn68H!4
  steps:
    - Вводим ник пользователя в окно «Nickname»
    - Вводим почту пользователя в окно «Email»
    - Вводим пароль в окно «Password»
    - Повторяем ввод пароля в окно «Password Confirmation»
    - Нажимаем кнопку «Submit»
  expected-result: |
    Сайт выводить сообщение «Passwords must match». Отправление данных на сервер не происходит

- summary: |
    Проверка наличия возможности игры пользователя с ботом 
  requirement: |
    Пользователь должен иметь возможность играть с ботом
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
  expected-result: |
    Успешно открывается окно игры с ботом

- summary: |
    Проверка наличия возможности игры пользователя с другим пользователем
  requirement: |
    Пользователь должен иметь возможность играть с другим пользователем
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With other user»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с другим пользователем «With other user»
    - Нажимаем на кнопку «Create battle»
  expected-result: |
    Успешно открывается окно игры с другим пользователем (после присоединения второго игрока)

- summary: |
    Проверка наличия возможности игры пользователя с другом
  requirement: |
    Пользователь должен иметь возможность играть с другом  
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a friend»
    Пользователь = LDSK_D3X1
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с другом «With a friend»
    - В поле выбора оппонента «Choose opponent» выбираем пользователя
    - Нажимаем на кнопку создания приглашения «Create invite»
  expected-result: |
    Пользователь успешно отправляет ссылку пользователю LDSK_D3X1. После нажатия другом кнопки «Accept» откроется страница с игрой

- summary: |
    Проверка наличия возможности присоединения к игре с другим пользователем
  requirement: |
    Пользователь должен иметь возможность присоединятся к игре с другим участником  
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка присоединения к баттлу = «Join a battle»
    Пользователь = Alisina
  steps:
    - Нажимаем кнопку присоединения к баттлу «Join a battle»
    - Контролируем открытие окна «Join a game»
    - В строке пользователя Alisina нажимаем кнопку «Fight»
  expected-result: |
    Успешно открывается окно игры с пользователем Alisina

- summary: |
    Проверка наличия возможности выбора длительности игры 
  requirement: |
    Пользователь должен иметь возможность настраивать длительность игры
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Продолжительность игры = 3 min
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Выбираем продолжительность игры в ленте «Time control»
    - Нажимаем на кнопку «Create battle»
  expected-result: |
    В открывшемся окне игры с ботом в форме «TIMEOUT IN:» таймер обратного отсчета начинается с 3 минут

- summary: |
    Проверка наличия возможности выбора уровня сложности игры
  requirement: |
    Пользователь должен иметь возможность настройки уровня сложности игры
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Уровень сложности игры = 2 звезды
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Выбираем уровень сложности игры
    - Нажимаем на кнопку «Create battle»
  expected-result: |
    В открывшемся окне игры с ботом есть значок с указанием выбранного уровня сложности – 2 звезды

- summary: |
    Проверка наличия возможности выбора определенной игры
  requirement: |
    Пользователь должен иметь возможность выбора определенной игры
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Игра = «rect_area»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Выбираем игру
    - Нажимаем на кнопку «Create battle»
  expected-result: |
    В окне открылась игра «rect_area»

- summary: |
    Проверка наличия возможности не делать выбор определенной игры
  requirement: |
    Пользователь должен иметь возможность начать рандомную игру
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Игра =  не выбрана (стот выбор по умолчанию «random task»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Выбираем игру
    - Нажимаем на кнопку «Create battle»
  expected-result: |
    В окне открылась рандомная игра 

- summary: |
    Проверка наличия возможности изменения языка программирования
  requirement: |
    Пользователь должен иметь возможность менять язык программирования во время решения задачи
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Язык программирования = «Java»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
    - Выбираем язык программирования в выпадающем окне с языками программирования
  expected-result: |
    Код в редакторе пользователя и соперника на языке  Java

- summary: |
    Проверка наличия возможности просмотра задания игры на английском языке
  requirement: |
    Пользователь должен иметь возможность просматривать задание игры на английском языке 
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Язык просмотра задания игры = «EN»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
    - Выбираем язык просмотра задания игры в выпадающем списке выбора языков
  expected-result: |
    Задание игры представлено на английском языке

- summary: |
    Проверка наличия возможности просмотра задания игры на русском языке
  requirement: |
    Пользователь должен иметь возможность просматривать задание игры на русском языке 
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Язык просмотра задания игры = «RU»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
    - Выбираем язык просмотра задания игры в выпадающем списке выбора языков
  expected-result: |
    Задание игры представлено на русском языке

- summary: |
    Проверка наличия возможности просмотра кода соперника в режиме онлайн
  requirement: |
    Пользователь должен иметь возможность просматривать код соперника в режиме онлайн
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
  expected-result: |
    Пользователь видит редактор соперника в режиме онлайн (в правой части страницы)

- summary: |
    Проверка наличия возможности проверки своего решения задачи
  requirement: |
    Пользователь должен иметь возможность проверить свое решение задачи 
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
    - Нажимаем кнопку проверки своего решения «Run»
  expected-result: |
    Пользователь видит вывод автоматических тестов

- summary: |
    Проверка наличия возможности выхода пользователя из игры
  requirement: |
    Пользователь должен иметь возможность выйти из игры 
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Кнопка выходы из игры = «Back to Home»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
    - В боковом меню нажимаем кнопку выхода из игры «Back to Home»
  expected-result: |
    Происходит редирект пользователя на главную страницу

- summary: |
    Проверка наличия возможности переподключения к игре пока она не закончилась
  requirement: |
    Пользователь должен иметь возможность переподключаться к игре, после выхода из редактора 
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
    - В боковом меню нажимаем кнопку выхода из игры «Back to Home»
    - Контролируем переход на главную страницу
    - Нажимаем кнопку для возврата в игру «Continue battle»
  expected-result: |
    Произошел редирект в игру, которую пользователь прервал

- summary: |
    Проверка наличия возможности просмотра результата игры 
  requirement: |
    Пользователь должен иметь возможность видеть, кто является победителем игры после ее завершения
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Продолжительность игры = 3 min
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Выбираем продолжительность игры в ленте «Time control»
    - Нажимаем на кнопку «Create battle»
    - Контролируем открытие окна игры с ботом
    - Ждем 3 минуты
  expected-result: |
    После завершения игры в модальном окне появляется сообщение с результатами игры «Time is up. There are no winners in the game» или «Your opponent has won the game»

- summary: |
    Проверка наличия возможности перехода в чат
  requirement: |
    Пользователь должен иметь возможность перехода в чат для общения с другими пользователями
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Сообщение = «Привет»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
    - В выпадающем меню выбираем основной чат «General»
    - В окне ввода сообщений печатаем сообщение
    - Нажимаем кнопку «Send» для отправки сообщения в чат
  expected-result: |
    Сообщение «Привет» видно в дереве сообщений, указан пользователь и время отправки сообщения

- summary: |
    Проверка наличия возможности просмотра завершенной игры
  requirement: |
    Пользователь должен иметь возможность просматривать завершенную игру
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Кнопка игры = «With a bot»
    Кнопка просмотра истории = «Open History»
  steps:
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Нажимаем на кнопку «Create battle»
    - В боковом меню нажимаем кнопку просмотра истории «Open History»
  expected-result: |
    Произошло обновление окна редакторов, пользователь может просматривать ход завершенной игры, нажав на ленту внизу окна

- summary: |
    Проверка наличия возможности получения рейтинга
  requirement: |
    Пользователь должен иметь возможность получения рейтинга за неделю, месяц и за все время
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
    нажата кнопка «Sign in»
    пользователь прошел аутентификацию
    открыта главная страница сайта
  test-data: |
    Тестовые данные
    Рейтинг = rating
  steps:
    - В верхнем меню нажимаем на иконку пользователя
    - В списке нажимаем на раздел «My Profile»
  expected-result: |
    Произошло открытие страницы с рейтингом пользователя, указан рейтинг за неделю, месяц и за все время

- summary: |
    Проверка наличия защиты данных пользователей
  requirement: |
    Сайт должен использовать протокол https
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
  test-data: |
    Тестовые данные
    Протокол = https
  steps:
    - Проверить протокол URL в адресной строке
  expected-result: |
    Сайт использует протокол https

- summary: |
    Проверка удобства использования сайта на мобильном устройстве
  requirement: |
    Сайт должен корректно работать на мобильном устройстве
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/
  test-data: |
    Тестовые данные
    Размер экрана = 320 х 480
      steps:
    - Нажимаем кнопку «Sign in»
    - Вводим почту пользователя  «NAta-786_@yandex.ru»  в окно «Email»
    - Вводим пароль «956yuD23!» в окно «Password»
    - Нажимаем кнопку «Submit»
    - Контролируем переход на главную страницу сайта
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Выбираем уровень сложности игры «2 звезды»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Выбираем продолжительность игры «3 min» в ленте «Time control» 
    - Нажимаем на кнопку «Create battle»
    - Выбираем русский язык «RU» в выпадающем списке выбора языков 
    - Выбираем язык программирования «Java» в выпадающем списке выбора языков программирования
    - В боковом меню нажимаем кнопку выхода из игры «Back to Home»
    - Контролируем переход на главную страницу
    - Нажимаем кнопку для возврата в игру «Continue battle»
    - Контролируем переход обратно на страницу игры
    - Контролируем наличие сообщения о результате игры после ее завершения
  expected-result: |
    Сайт корректно работает на мобильном устройстве

- summary: |
    Проверка совместимости с последней версией браузера Google Chrome
  requirement: |
    Сайт должен иметь совместимость с последней версией браузера Google Chrome
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/ в Google Chrome
  test-data: |
    Тестовые данные
    браузер = Google Chrome
      steps:
    - Нажимаем кнопку «Sign in»
    - Вводим почту пользователя  «NAta-786_@yandex.ru»  в окно «Email»
    - Вводим пароль «956yuD23!» в окно «Password»
    - Нажимаем кнопку «Submit»
    - Контролируем переход на главную страницу сайта
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Выбираем уровень сложности игры «2 звезды»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Выбираем продолжительность игры «3 min» в ленте «Time control» 
    - Нажимаем на кнопку «Create battle»
    - Выбираем русский язык «RU» в выпадающем списке выбора языков 
    - Выбираем язык программирования «Java» в выпадающем списке выбора языков программирования
    - В боковом меню нажимаем кнопку выхода из игры «Back to Home»
    - Контролируем переход на главную страницу
    - Нажимаем кнопку для возврата в игру «Continue battle»
    - Контролируем переход обратно на страницу игры
    - Контролируем наличие сообщения о результате игры после ее завершения
  expected-result: |
    Сайт должен иметь совместимость с последней версией браузера Google Chrome

- summary: |
    Проверка совместимости с последней версией браузера Mozilla Firefox
  requirement: |
    Сайт должен иметь совместимость с последней версией браузера Mozilla Firefox
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/ в Mozilla Firefox
  test-data: |
    Тестовые данные
    браузер = Mozilla Firefox
      steps:
    - Нажимаем кнопку «Sign in»
    - Вводим почту пользователя  «NAta-786_@yandex.ru»  в окно «Email»
    - Вводим пароль «956yuD23!» в окно «Password»
    - Нажимаем кнопку «Submit»
    - Контролируем переход на главную страницу сайта
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Выбираем уровень сложности игры «2 звезды»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Выбираем продолжительность игры «3 min» в ленте «Time control» 
    - Нажимаем на кнопку «Create battle»
    - Выбираем русский язык «RU» в выпадающем списке выбора языков 
    - Выбираем язык программирования «Java» в выпадающем списке выбора языков программирования
    - В боковом меню нажимаем кнопку выхода из игры «Back to Home»
    - Контролируем переход на главную страницу
    - Нажимаем кнопку для возврата в игру «Continue battle»
    - Контролируем переход обратно на страницу игры
    - Контролируем наличие сообщения о результате игры после ее завершения
  expected-result: |
    Сайт должен иметь совместимость с последней версией браузера Mozilla Firefox

- summary: |
    Проверка совместимости с последней версией браузера Яндекс Браузер
  requirement: |
    Сайт должен иметь совместимость с последней версией браузера Яндекс Браузер
  prerequisites: |
    открыт сайт https://codebattle.hexlet.io/ в Яндекс Браузер
  test-data: |
    Тестовые данные
    браузер = Яндекс Браузер
      steps:
    - Нажимаем кнопку «Sign in»
    - Вводим почту пользователя  «NAta-786_@yandex.ru»  в окно «Email»
    - Вводим пароль «956yuD23!» в окно «Password»
    - Нажимаем кнопку «Submit»
    - Контролируем переход на главную страницу сайта
    - Нажимаем кнопку создания баттла «Create a battle»
    - Контролируем открытие окна «Create a game»
    - Выбираем уровень сложности игры «2 звезды»
    - Нажимаем на кнопку игры с ботом «With a bot»
    - Выбираем продолжительность игры «3 min» в ленте «Time control» 
    - Нажимаем на кнопку «Create battle»
    - Выбираем русский язык «RU» в выпадающем списке выбора языков 
    - Выбираем язык программирования «Java» в выпадающем списке выбора языков программирования
    - В боковом меню нажимаем кнопку выхода из игры «Back to Home»
    - Контролируем переход на главную страницу
    - Нажимаем кнопку для возврата в игру «Continue battle»
    - Контролируем переход обратно на страницу игры
    - Контролируем наличие сообщения о результате игры после ее завершения
  expected-result: |
    Сайт должен иметь совместимость с последней версией браузера Яндекс Браузер
    
- summary: |
    Проверка корректного отображения страницы при низкой скорости загрузки
  requirement: |
    Сайт должен корректно отображатся при низкой скорости загрузки
  prerequisites: |
    - открыт сайт https://codebattle.hexlet.io/
    - открыты инструменты разработчика
  test-data: |
    способ передачи данных = GPRS
  steps:
    - В инструментах разработчика изменяем способ передачи данных
    - Обновляем страницу
  expected-result: |
    Вначале загружается основные элементы и текст, а затем подгружать изображения и второстепенная информация



